plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.4'
}

group = 'seg.work.carog'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    from {
        image = "amazoncorretto:21-alpine-jdk"
    }
    to {
        image = "ghcr.io/${project.group}/${project.name}"
        tags = ["latest", project.version as String]
    }
    container {
        jvmFlags = List.of(
                // 컨테이너 환경 지원
                "-XX:+UseContainerSupport",
                // JVM 사용 최대 메모리 비율
                "-XX:MaxRAMPercentage=50.0",
                // JVM 초기 메모리 비율
                "-XX:InitialRAMPercentage=30.0",
                // JVM 최소 메모리 비율
                "-XX:MinRAMPercentage=30.0",
                // JVM 메모리를 미리 할당
                "-XX:+AlwaysPreTouch",

                // G1 Garbage Collector 사용
                "-XX:+UseG1GC",
                // 참조 처리 병렬화 활성화
                "-XX:+ParallelRefProcEnabled",
                // G1GC 힙 영역 크기 설정
                "-XX:G1HeapRegionSize=16M",
                // 지정한 힙 사용률 n%에서 GC 트리거
                "-XX:InitiatingHeapOccupancyPercent=30",

                // 메타스페이스 초기 크기
                "-XX:MetaspaceSize=128m",
                // 메타스페이스 최대 크기
                "-XX:MaxMetaspaceSize=256m",

                // 계층적 컴파일 활성화
                "-XX:+TieredCompilation",
                // 문자열 중복 제거 활성화
                "-XX:+UseStringDeduplication",
                // SoftReference Least Recently Used(LRU, 최소 최근 사용) 정책을 조정, 50밀리초 동안 소프트 레퍼런스 유지
//                "-XX:SoftRefLRUPolicyMSPerMB=50",
                // JVM 코드 캐시의 최대 크기를 지정
//                "-XX:ReservedCodeCacheSize=512m",
                // 코드 캐시를 비울 수 있도록 허용
//                "-XX:+UseCodeCacheFlushing",

                // 빠른 난수 생성
                "-Djava.security.egd=file:/dev/./urandom",
        )
        ports = ["8030"]
    }
}